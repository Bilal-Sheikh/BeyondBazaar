generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum Role {
    USER
    SELLER
}

enum Category {
    MENS_TOP_WEAR
    MENS_BOTTOM_WEAR

    WOMENS_TOP_WEAR
    WOMENS_BOTTOM_WEAR

    MENS_FOOTWEAR
    WOMENS_FOOTWEAR

    KIDS

    WALLETS
    WATCHES
    BELTS
    BAGS
    PERFUMES

    GAMING
    POWERBANK
    HEADPHONES
    MOBILE_ACCESSORIES

    MOBILES

    OTHERS
}

model User {
    id        Int    @id @default(autoincrement())
    clerkId   String @unique
    firstName String
    lastName  String
    email     String @unique
    role      Role   @default(USER)

    postedProducts Product[]

    cart            CartItem[]
    payments        Payment[]
    purchaseHistory PurchaseHistory[]

    totalRevenue Float @default(0)

    attributes Json
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
}

model Product {
    id            Int    @id @default(autoincrement())
    name          String
    description   String
    price         Int
    imageUrl      String
    stockQuantity Int

    category Category

    postedBy   User   @relation(fields: [postedById], references: [clerkId])
    postedById String

    inCarts CartItem[]

    sales Int @default(0)

    productRevenue Float @default(0)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model CartItem {
    id        Int      @id @default(autoincrement())
    userId    String
    user      User     @relation(fields: [userId], references: [clerkId])
    productId Int
    product   Product  @relation(fields: [productId], references: [id])
    quantity  Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Payment {
    id                  Int    @id @default(autoincrement())
    razorpay_order_id   String
    razorpay_payment_id String
    razorpay_signature  String
    amount              Float

    userId String
    user   User   @relation(fields: [userId], references: [clerkId])

    createdAt DateTime @default(now())
}

model PurchaseHistory {
    id        Int      @id @default(autoincrement())
    userId    String
    user      User     @relation(fields: [userId], references: [clerkId])
    productId Int
    quantity  Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
